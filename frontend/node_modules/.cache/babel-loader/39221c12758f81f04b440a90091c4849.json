{"ast":null,"code":"/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\nimport { format as formatUrl } from 'node:url';\nimport { deprecate } from 'node:util';\nimport Headers from './headers.js';\nimport Body, { clone, extractContentType, getTotalBytes } from './body.js';\nimport { isAbortSignal } from './utils/is.js';\nimport { getSearch } from './utils/get-search.js';\nimport { validateReferrerPolicy, determineRequestsReferrer, DEFAULT_REFERRER_POLICY } from './utils/referrer.js';\nconst INTERNALS = Symbol('Request internals');\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} object\n * @return {boolean}\n */\n\nconst isRequest = object => {\n  return typeof object === 'object' && typeof object[INTERNALS] === 'object';\n};\n\nconst doBadDataWarn = deprecate(() => {}, '.data is not a valid RequestInit property, use .body instead', 'https://github.com/node-fetch/node-fetch/issues/1000 (request)');\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\n\nexport default class Request extends Body {\n  constructor(input) {\n    let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let parsedURL; // Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\n    if (isRequest(input)) {\n      parsedURL = new URL(input.url);\n    } else {\n      parsedURL = new URL(input);\n      input = {};\n    }\n\n    if (parsedURL.username !== '' || parsedURL.password !== '') {\n      throw new TypeError(`${parsedURL} is an url with embedded credentials.`);\n    }\n\n    let method = init.method || input.method || 'GET';\n\n    if (/^(delete|get|head|options|post|put)$/i.test(method)) {\n      method = method.toUpperCase();\n    }\n\n    if ('data' in init) {\n      doBadDataWarn();\n    } // eslint-disable-next-line no-eq-null, eqeqeq\n\n\n    if ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n      throw new TypeError('Request with GET/HEAD method cannot have body');\n    }\n\n    const inputBody = init.body ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n    super(inputBody, {\n      size: init.size || input.size || 0\n    });\n    const headers = new Headers(init.headers || input.headers || {});\n\n    if (inputBody !== null && !headers.has('Content-Type')) {\n      const contentType = extractContentType(inputBody, this);\n\n      if (contentType) {\n        headers.set('Content-Type', contentType);\n      }\n    }\n\n    let signal = isRequest(input) ? input.signal : null;\n\n    if ('signal' in init) {\n      signal = init.signal;\n    } // eslint-disable-next-line no-eq-null, eqeqeq\n\n\n    if (signal != null && !isAbortSignal(signal)) {\n      throw new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n    } // §5.4, Request constructor steps, step 15.1\n    // eslint-disable-next-line no-eq-null, eqeqeq\n\n\n    let referrer = init.referrer == null ? input.referrer : init.referrer;\n\n    if (referrer === '') {\n      // §5.4, Request constructor steps, step 15.2\n      referrer = 'no-referrer';\n    } else if (referrer) {\n      // §5.4, Request constructor steps, step 15.3.1, 15.3.2\n      const parsedReferrer = new URL(referrer); // §5.4, Request constructor steps, step 15.3.3, 15.3.4\n\n      referrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;\n    } else {\n      referrer = undefined;\n    }\n\n    this[INTERNALS] = {\n      method,\n      redirect: init.redirect || input.redirect || 'follow',\n      headers,\n      parsedURL,\n      signal,\n      referrer\n    }; // Node-fetch-only options\n\n    this.follow = init.follow === undefined ? input.follow === undefined ? 20 : input.follow : init.follow;\n    this.compress = init.compress === undefined ? input.compress === undefined ? true : input.compress : init.compress;\n    this.counter = init.counter || input.counter || 0;\n    this.agent = init.agent || input.agent;\n    this.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n    this.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false; // §5.4, Request constructor steps, step 16.\n    // Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy\n\n    this.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';\n  }\n  /** @returns {string} */\n\n\n  get method() {\n    return this[INTERNALS].method;\n  }\n  /** @returns {string} */\n\n\n  get url() {\n    return formatUrl(this[INTERNALS].parsedURL);\n  }\n  /** @returns {Headers} */\n\n\n  get headers() {\n    return this[INTERNALS].headers;\n  }\n\n  get redirect() {\n    return this[INTERNALS].redirect;\n  }\n  /** @returns {AbortSignal} */\n\n\n  get signal() {\n    return this[INTERNALS].signal;\n  } // https://fetch.spec.whatwg.org/#dom-request-referrer\n\n\n  get referrer() {\n    if (this[INTERNALS].referrer === 'no-referrer') {\n      return '';\n    }\n\n    if (this[INTERNALS].referrer === 'client') {\n      return 'about:client';\n    }\n\n    if (this[INTERNALS].referrer) {\n      return this[INTERNALS].referrer.toString();\n    }\n\n    return undefined;\n  }\n\n  get referrerPolicy() {\n    return this[INTERNALS].referrerPolicy;\n  }\n\n  set referrerPolicy(referrerPolicy) {\n    this[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);\n  }\n  /**\n   * Clone this request\n   *\n   * @return  Request\n   */\n\n\n  clone() {\n    return new Request(this);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Request';\n  }\n\n}\nObject.defineProperties(Request.prototype, {\n  method: {\n    enumerable: true\n  },\n  url: {\n    enumerable: true\n  },\n  headers: {\n    enumerable: true\n  },\n  redirect: {\n    enumerable: true\n  },\n  clone: {\n    enumerable: true\n  },\n  signal: {\n    enumerable: true\n  },\n  referrer: {\n    enumerable: true\n  },\n  referrerPolicy: {\n    enumerable: true\n  }\n});\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param {Request} request - A Request instance\n * @return The options object to be passed to http.request\n */\n\nexport const getNodeRequestOptions = request => {\n  const {\n    parsedURL\n  } = request[INTERNALS];\n  const headers = new Headers(request[INTERNALS].headers); // Fetch step 1.3\n\n  if (!headers.has('Accept')) {\n    headers.set('Accept', '*/*');\n  } // HTTP-network-or-cache fetch steps 2.4-2.7\n\n\n  let contentLengthValue = null;\n\n  if (request.body === null && /^(post|put)$/i.test(request.method)) {\n    contentLengthValue = '0';\n  }\n\n  if (request.body !== null) {\n    const totalBytes = getTotalBytes(request); // Set Content-Length if totalBytes is a number (that is not NaN)\n\n    if (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n      contentLengthValue = String(totalBytes);\n    }\n  }\n\n  if (contentLengthValue) {\n    headers.set('Content-Length', contentLengthValue);\n  } // 4.1. Main fetch, step 2.6\n  // > If request's referrer policy is the empty string, then set request's referrer policy to the\n  // > default referrer policy.\n\n\n  if (request.referrerPolicy === '') {\n    request.referrerPolicy = DEFAULT_REFERRER_POLICY;\n  } // 4.1. Main fetch, step 2.7\n  // > If request's referrer is not \"no-referrer\", set request's referrer to the result of invoking\n  // > determine request's referrer.\n\n\n  if (request.referrer && request.referrer !== 'no-referrer') {\n    request[INTERNALS].referrer = determineRequestsReferrer(request);\n  } else {\n    request[INTERNALS].referrer = 'no-referrer';\n  } // 4.5. HTTP-network-or-cache fetch, step 6.9\n  // > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized\n  // >  and isomorphic encoded, to httpRequest's header list.\n\n\n  if (request[INTERNALS].referrer instanceof URL) {\n    headers.set('Referer', request.referrer);\n  } // HTTP-network-or-cache fetch step 2.11\n\n\n  if (!headers.has('User-Agent')) {\n    headers.set('User-Agent', 'node-fetch');\n  } // HTTP-network-or-cache fetch step 2.15\n\n\n  if (request.compress && !headers.has('Accept-Encoding')) {\n    headers.set('Accept-Encoding', 'gzip, deflate, br');\n  }\n\n  let {\n    agent\n  } = request;\n\n  if (typeof agent === 'function') {\n    agent = agent(parsedURL);\n  }\n\n  if (!headers.has('Connection') && !agent) {\n    headers.set('Connection', 'close');\n  } // HTTP-network fetch step 4.2\n  // chunked encoding is handled by Node.js\n\n\n  const search = getSearch(parsedURL); // Pass the full URL directly to request(), but overwrite the following\n  // options:\n\n  const options = {\n    // Overwrite search to retain trailing ? (issue #776)\n    path: parsedURL.pathname + search,\n    // The following options are not expressed in the URL\n    method: request.method,\n    headers: headers[Symbol.for('nodejs.util.inspect.custom')](),\n    insecureHTTPParser: request.insecureHTTPParser,\n    agent\n  };\n  return {\n    /** @type {URL} */\n    parsedURL,\n    options\n  };\n};","map":{"version":3,"sources":["/home/makerspace/mks_users_home/wind/22-wind/frontend/node_modules/node-fetch/src/request.js"],"names":["format","formatUrl","deprecate","Headers","Body","clone","extractContentType","getTotalBytes","isAbortSignal","getSearch","validateReferrerPolicy","determineRequestsReferrer","DEFAULT_REFERRER_POLICY","INTERNALS","Symbol","isRequest","object","doBadDataWarn","Request","constructor","input","init","parsedURL","URL","url","username","password","TypeError","method","test","toUpperCase","body","inputBody","size","headers","has","contentType","set","signal","referrer","parsedReferrer","undefined","redirect","follow","compress","counter","agent","highWaterMark","insecureHTTPParser","referrerPolicy","toString","toStringTag","Object","defineProperties","prototype","enumerable","getNodeRequestOptions","request","contentLengthValue","totalBytes","Number","isNaN","String","search","options","path","pathname","for"],"mappings":"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","sourcesContent":["/**\n * Request.js\n *\n * Request class contains server only options\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport {format as formatUrl} from 'node:url';\nimport {deprecate} from 'node:util';\nimport Headers from './headers.js';\nimport Body, {clone, extractContentType, getTotalBytes} from './body.js';\nimport {isAbortSignal} from './utils/is.js';\nimport {getSearch} from './utils/get-search.js';\nimport {\n\tvalidateReferrerPolicy, determineRequestsReferrer, DEFAULT_REFERRER_POLICY\n} from './utils/referrer.js';\n\nconst INTERNALS = Symbol('Request internals');\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} object\n * @return {boolean}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS] === 'object'\n\t);\n};\n\nconst doBadDataWarn = deprecate(() => {},\n\t'.data is not a valid RequestInit property, use .body instead',\n\t'https://github.com/node-fetch/node-fetch/issues/1000 (request)');\n\n/**\n * Request class\n *\n * Ref: https://fetch.spec.whatwg.org/#request-class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nexport default class Request extends Body {\n\tconstructor(input, init = {}) {\n\t\tlet parsedURL;\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(input)) {\n\t\t\tparsedURL = new URL(input.url);\n\t\t} else {\n\t\t\tparsedURL = new URL(input);\n\t\t\tinput = {};\n\t\t}\n\n\t\tif (parsedURL.username !== '' || parsedURL.password !== '') {\n\t\t\tthrow new TypeError(`${parsedURL} is an url with embedded credentials.`);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tif (/^(delete|get|head|options|post|put)$/i.test(method)) {\n\t\t\tmethod = method.toUpperCase();\n\t\t}\n\n\t\tif ('data' in init) {\n\t\t\tdoBadDataWarn();\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif ((init.body != null || (isRequest(input) && input.body !== null)) &&\n\t\t\t(method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tconst inputBody = init.body ?\n\t\t\tinit.body :\n\t\t\t(isRequest(input) && input.body !== null ?\n\t\t\t\tclone(input) :\n\t\t\t\tnull);\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.set('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ?\n\t\t\tinput.signal :\n\t\t\tnull;\n\t\tif ('signal' in init) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal or EventTarget');\n\t\t}\n\n\t\t// §5.4, Request constructor steps, step 15.1\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tlet referrer = init.referrer == null ? input.referrer : init.referrer;\n\t\tif (referrer === '') {\n\t\t\t// §5.4, Request constructor steps, step 15.2\n\t\t\treferrer = 'no-referrer';\n\t\t} else if (referrer) {\n\t\t\t// §5.4, Request constructor steps, step 15.3.1, 15.3.2\n\t\t\tconst parsedReferrer = new URL(referrer);\n\t\t\t// §5.4, Request constructor steps, step 15.3.3, 15.3.4\n\t\t\treferrer = /^about:(\\/\\/)?client$/.test(parsedReferrer) ? 'client' : parsedReferrer;\n\t\t} else {\n\t\t\treferrer = undefined;\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal,\n\t\t\treferrer\n\t\t};\n\n\t\t// Node-fetch-only options\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\n\t\t// §5.4, Request constructor steps, step 16.\n\t\t// Default is empty string per https://fetch.spec.whatwg.org/#concept-request-referrer-policy\n\t\tthis.referrerPolicy = init.referrerPolicy || input.referrerPolicy || '';\n\t}\n\n\t/** @returns {string} */\n\tget method() {\n\t\treturn this[INTERNALS].method;\n\t}\n\n\t/** @returns {string} */\n\tget url() {\n\t\treturn formatUrl(this[INTERNALS].parsedURL);\n\t}\n\n\t/** @returns {Headers} */\n\tget headers() {\n\t\treturn this[INTERNALS].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS].redirect;\n\t}\n\n\t/** @returns {AbortSignal} */\n\tget signal() {\n\t\treturn this[INTERNALS].signal;\n\t}\n\n\t// https://fetch.spec.whatwg.org/#dom-request-referrer\n\tget referrer() {\n\t\tif (this[INTERNALS].referrer === 'no-referrer') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer === 'client') {\n\t\t\treturn 'about:client';\n\t\t}\n\n\t\tif (this[INTERNALS].referrer) {\n\t\t\treturn this[INTERNALS].referrer.toString();\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget referrerPolicy() {\n\t\treturn this[INTERNALS].referrerPolicy;\n\t}\n\n\tset referrerPolicy(referrerPolicy) {\n\t\tthis[INTERNALS].referrerPolicy = validateReferrerPolicy(referrerPolicy);\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  Request\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true},\n\treferrer: {enumerable: true},\n\treferrerPolicy: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param {Request} request - A Request instance\n * @return The options object to be passed to http.request\n */\nexport const getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS];\n\tconst headers = new Headers(request[INTERNALS].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// 4.1. Main fetch, step 2.6\n\t// > If request's referrer policy is the empty string, then set request's referrer policy to the\n\t// > default referrer policy.\n\tif (request.referrerPolicy === '') {\n\t\trequest.referrerPolicy = DEFAULT_REFERRER_POLICY;\n\t}\n\n\t// 4.1. Main fetch, step 2.7\n\t// > If request's referrer is not \"no-referrer\", set request's referrer to the result of invoking\n\t// > determine request's referrer.\n\tif (request.referrer && request.referrer !== 'no-referrer') {\n\t\trequest[INTERNALS].referrer = determineRequestsReferrer(request);\n\t} else {\n\t\trequest[INTERNALS].referrer = 'no-referrer';\n\t}\n\n\t// 4.5. HTTP-network-or-cache fetch, step 6.9\n\t// > If httpRequest's referrer is a URL, then append `Referer`/httpRequest's referrer, serialized\n\t// >  and isomorphic encoded, to httpRequest's header list.\n\tif (request[INTERNALS].referrer instanceof URL) {\n\t\theaders.set('Referer', request.referrer);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip, deflate, br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = getSearch(parsedURL);\n\n\t// Pass the full URL directly to request(), but overwrite the following\n\t// options:\n\tconst options = {\n\t\t// Overwrite search to retain trailing ? (issue #776)\n\t\tpath: parsedURL.pathname + search,\n\t\t// The following options are not expressed in the URL\n\t\tmethod: request.method,\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn {\n\t\t/** @type {URL} */\n\t\tparsedURL,\n\t\toptions\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}