{"ast":null,"code":"/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\nimport http from 'node:http';\nimport https from 'node:https';\nimport zlib from 'node:zlib';\nimport Stream, { PassThrough, pipeline as pump } from 'node:stream';\nimport { Buffer } from 'node:buffer';\nimport dataUriToBuffer from 'data-uri-to-buffer';\nimport { writeToStream, clone } from './body.js';\nimport Response from './response.js';\nimport Headers, { fromRawHeaders } from './headers.js';\nimport Request, { getNodeRequestOptions } from './request.js';\nimport { FetchError } from './errors/fetch-error.js';\nimport { AbortError } from './errors/abort-error.js';\nimport { isRedirect } from './utils/is-redirect.js';\nimport { FormData } from 'formdata-polyfill/esm.min.js';\nimport { isDomainOrSubdomain } from './utils/is.js';\nimport { parseReferrerPolicyFromHeader } from './utils/referrer.js';\nimport { Blob, File, fileFromSync, fileFrom, blobFromSync, blobFrom } from 'fetch-blob/from.js';\nexport { FormData, Headers, Request, Response, FetchError, AbortError, isRedirect };\nexport { Blob, File, fileFromSync, fileFrom, blobFromSync, blobFrom };\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\n\nexport default async function fetch(url, options_) {\n  return new Promise((resolve, reject) => {\n    // Build request object\n    const request = new Request(url, options_);\n    const {\n      parsedURL,\n      options\n    } = getNodeRequestOptions(request);\n\n    if (!supportedSchemas.has(parsedURL.protocol)) {\n      throw new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, '')}\" is not supported.`);\n    }\n\n    if (parsedURL.protocol === 'data:') {\n      const data = dataUriToBuffer(request.url);\n      const response = new Response(data, {\n        headers: {\n          'Content-Type': data.typeFull\n        }\n      });\n      resolve(response);\n      return;\n    } // Wrap http.request into fetch\n\n\n    const send = (parsedURL.protocol === 'https:' ? https : http).request;\n    const {\n      signal\n    } = request;\n    let response = null;\n\n    const abort = () => {\n      const error = new AbortError('The operation was aborted.');\n      reject(error);\n\n      if (request.body && request.body instanceof Stream.Readable) {\n        request.body.destroy(error);\n      }\n\n      if (!response || !response.body) {\n        return;\n      }\n\n      response.body.emit('error', error);\n    };\n\n    if (signal && signal.aborted) {\n      abort();\n      return;\n    }\n\n    const abortAndFinalize = () => {\n      abort();\n      finalize();\n    }; // Send request\n\n\n    const request_ = send(parsedURL.toString(), options);\n\n    if (signal) {\n      signal.addEventListener('abort', abortAndFinalize);\n    }\n\n    const finalize = () => {\n      request_.abort();\n\n      if (signal) {\n        signal.removeEventListener('abort', abortAndFinalize);\n      }\n    };\n\n    request_.on('error', error => {\n      reject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\n      finalize();\n    });\n    fixResponseChunkedTransferBadEnding(request_, error => {\n      if (response && response.body) {\n        response.body.destroy(error);\n      }\n    });\n    /* c8 ignore next 18 */\n\n    if (process.version < 'v14') {\n      // Before Node.js 14, pipeline() does not fully support async iterators and does not always\n      // properly handle when the socket close/end events are out of order.\n      request_.on('socket', s => {\n        let endedWithEventsCount;\n        s.prependListener('end', () => {\n          endedWithEventsCount = s._eventsCount;\n        });\n        s.prependListener('close', hadError => {\n          // if end happened before close but the socket didn't emit an error, do it now\n          if (response && endedWithEventsCount < s._eventsCount && !hadError) {\n            const error = new Error('Premature close');\n            error.code = 'ERR_STREAM_PREMATURE_CLOSE';\n            response.body.emit('error', error);\n          }\n        });\n      });\n    }\n\n    request_.on('response', response_ => {\n      request_.setTimeout(0);\n      const headers = fromRawHeaders(response_.rawHeaders); // HTTP fetch step 5\n\n      if (isRedirect(response_.statusCode)) {\n        // HTTP fetch step 5.2\n        const location = headers.get('Location'); // HTTP fetch step 5.3\n\n        let locationURL = null;\n\n        try {\n          locationURL = location === null ? null : new URL(location, request.url);\n        } catch {\n          // error here can only be invalid URL in Location: header\n          // do not throw when options.redirect == manual\n          // let the user extract the errorneous redirect URL\n          if (request.redirect !== 'manual') {\n            reject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n            finalize();\n            return;\n          }\n        } // HTTP fetch step 5.5\n\n\n        switch (request.redirect) {\n          case 'error':\n            reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n            finalize();\n            return;\n\n          case 'manual':\n            // Nothing to do\n            break;\n\n          case 'follow':\n            {\n              // HTTP-redirect fetch step 2\n              if (locationURL === null) {\n                break;\n              } // HTTP-redirect fetch step 5\n\n\n              if (request.counter >= request.follow) {\n                reject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n                finalize();\n                return;\n              } // HTTP-redirect fetch step 6 (counter increment)\n              // Create a new Request object.\n\n\n              const requestOptions = {\n                headers: new Headers(request.headers),\n                follow: request.follow,\n                counter: request.counter + 1,\n                agent: request.agent,\n                compress: request.compress,\n                method: request.method,\n                body: clone(request),\n                signal: request.signal,\n                size: request.size,\n                referrer: request.referrer,\n                referrerPolicy: request.referrerPolicy\n              }; // when forwarding sensitive headers like \"Authorization\",\n              // \"WWW-Authenticate\", and \"Cookie\" to untrusted targets,\n              // headers will be ignored when following a redirect to a domain\n              // that is not a subdomain match or exact match of the initial domain.\n              // For example, a redirect from \"foo.com\" to either \"foo.com\" or \"sub.foo.com\"\n              // will forward the sensitive headers, but a redirect to \"bar.com\" will not.\n\n              if (!isDomainOrSubdomain(request.url, locationURL)) {\n                for (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n                  requestOptions.headers.delete(name);\n                }\n              } // HTTP-redirect fetch step 9\n\n\n              if (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\n                reject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n                finalize();\n                return;\n              } // HTTP-redirect fetch step 11\n\n\n              if (response_.statusCode === 303 || (response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST') {\n                requestOptions.method = 'GET';\n                requestOptions.body = undefined;\n                requestOptions.headers.delete('content-length');\n              } // HTTP-redirect fetch step 14\n\n\n              const responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\n\n              if (responseReferrerPolicy) {\n                requestOptions.referrerPolicy = responseReferrerPolicy;\n              } // HTTP-redirect fetch step 15\n\n\n              resolve(fetch(new Request(locationURL, requestOptions)));\n              finalize();\n              return;\n            }\n\n          default:\n            return reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n        }\n      } // Prepare response\n\n\n      if (signal) {\n        response_.once('end', () => {\n          signal.removeEventListener('abort', abortAndFinalize);\n        });\n      }\n\n      let body = pump(response_, new PassThrough(), error => {\n        if (error) {\n          reject(error);\n        }\n      }); // see https://github.com/nodejs/node/pull/29376\n\n      /* c8 ignore next 3 */\n\n      if (process.version < 'v12.10') {\n        response_.on('aborted', abortAndFinalize);\n      }\n\n      const responseOptions = {\n        url: request.url,\n        status: response_.statusCode,\n        statusText: response_.statusMessage,\n        headers,\n        size: request.size,\n        counter: request.counter,\n        highWaterMark: request.highWaterMark\n      }; // HTTP-network fetch step 12.1.1.3\n\n      const codings = headers.get('Content-Encoding'); // HTTP-network fetch step 12.1.1.4: handle content codings\n      // in following scenarios we ignore compression support\n      // 1. compression support is disabled\n      // 2. HEAD request\n      // 3. no Content-Encoding header\n      // 4. no content response (204)\n      // 5. content not modified response (304)\n\n      if (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n        response = new Response(body, responseOptions);\n        resolve(response);\n        return;\n      } // For Node v6+\n      // Be less strict when decoding compressed responses, since sometimes\n      // servers send slightly invalid responses that are still accepted\n      // by common browsers.\n      // Always using Z_SYNC_FLUSH is what cURL does.\n\n\n      const zlibOptions = {\n        flush: zlib.Z_SYNC_FLUSH,\n        finishFlush: zlib.Z_SYNC_FLUSH\n      }; // For gzip\n\n      if (codings === 'gzip' || codings === 'x-gzip') {\n        body = pump(body, zlib.createGunzip(zlibOptions), error => {\n          if (error) {\n            reject(error);\n          }\n        });\n        response = new Response(body, responseOptions);\n        resolve(response);\n        return;\n      } // For deflate\n\n\n      if (codings === 'deflate' || codings === 'x-deflate') {\n        // Handle the infamous raw deflate response from old servers\n        // a hack for old IIS and Apache servers\n        const raw = pump(response_, new PassThrough(), error => {\n          if (error) {\n            reject(error);\n          }\n        });\n        raw.once('data', chunk => {\n          // See http://stackoverflow.com/questions/37519828\n          if ((chunk[0] & 0x0F) === 0x08) {\n            body = pump(body, zlib.createInflate(), error => {\n              if (error) {\n                reject(error);\n              }\n            });\n          } else {\n            body = pump(body, zlib.createInflateRaw(), error => {\n              if (error) {\n                reject(error);\n              }\n            });\n          }\n\n          response = new Response(body, responseOptions);\n          resolve(response);\n        });\n        raw.once('end', () => {\n          // Some old IIS servers return zero-length OK deflate responses, so\n          // 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903\n          if (!response) {\n            response = new Response(body, responseOptions);\n            resolve(response);\n          }\n        });\n        return;\n      } // For br\n\n\n      if (codings === 'br') {\n        body = pump(body, zlib.createBrotliDecompress(), error => {\n          if (error) {\n            reject(error);\n          }\n        });\n        response = new Response(body, responseOptions);\n        resolve(response);\n        return;\n      } // Otherwise, use response as-is\n\n\n      response = new Response(body, responseOptions);\n      resolve(response);\n    }); // eslint-disable-next-line promise/prefer-await-to-then\n\n    writeToStream(request_, request).catch(reject);\n  });\n}\n\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n  const LAST_CHUNK = Buffer.from('0\\r\\n\\r\\n');\n  let isChunkedTransfer = false;\n  let properLastChunkReceived = false;\n  let previousChunk;\n  request.on('response', response => {\n    const {\n      headers\n    } = response;\n    isChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n  });\n  request.on('socket', socket => {\n    const onSocketClose = () => {\n      if (isChunkedTransfer && !properLastChunkReceived) {\n        const error = new Error('Premature close');\n        error.code = 'ERR_STREAM_PREMATURE_CLOSE';\n        errorCallback(error);\n      }\n    };\n\n    const onData = buf => {\n      properLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0; // Sometimes final 0-length chunk and end of message code are in separate packets\n\n      if (!properLastChunkReceived && previousChunk) {\n        properLastChunkReceived = Buffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 && Buffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0;\n      }\n\n      previousChunk = buf;\n    };\n\n    socket.prependListener('close', onSocketClose);\n    socket.on('data', onData);\n    request.on('close', () => {\n      socket.removeListener('close', onSocketClose);\n      socket.removeListener('data', onData);\n    });\n  });\n}","map":{"version":3,"sources":["/home/makerspace/mks_users_home/wind/22-wind/frontend/node_modules/node-fetch/src/index.js"],"names":["http","https","zlib","Stream","PassThrough","pipeline","pump","Buffer","dataUriToBuffer","writeToStream","clone","Response","Headers","fromRawHeaders","Request","getNodeRequestOptions","FetchError","AbortError","isRedirect","FormData","isDomainOrSubdomain","parseReferrerPolicyFromHeader","Blob","File","fileFromSync","fileFrom","blobFromSync","blobFrom","supportedSchemas","Set","fetch","url","options_","Promise","resolve","reject","request","parsedURL","options","has","protocol","TypeError","replace","data","response","headers","typeFull","send","signal","abort","error","body","Readable","destroy","emit","aborted","abortAndFinalize","finalize","request_","toString","addEventListener","removeEventListener","on","message","fixResponseChunkedTransferBadEnding","process","version","s","endedWithEventsCount","prependListener","_eventsCount","hadError","Error","code","response_","setTimeout","rawHeaders","statusCode","location","get","locationURL","URL","redirect","counter","follow","requestOptions","agent","compress","method","size","referrer","referrerPolicy","name","delete","undefined","responseReferrerPolicy","once","responseOptions","status","statusText","statusMessage","highWaterMark","codings","zlibOptions","flush","Z_SYNC_FLUSH","finishFlush","createGunzip","raw","chunk","createInflate","createInflateRaw","createBrotliDecompress","catch","errorCallback","LAST_CHUNK","from","isChunkedTransfer","properLastChunkReceived","previousChunk","socket","onSocketClose","onData","buf","compare","slice","removeListener"],"mappings":"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","sourcesContent":["/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nimport http from 'node:http';\nimport https from 'node:https';\nimport zlib from 'node:zlib';\nimport Stream, {PassThrough, pipeline as pump} from 'node:stream';\nimport {Buffer} from 'node:buffer';\n\nimport dataUriToBuffer from 'data-uri-to-buffer';\n\nimport {writeToStream, clone} from './body.js';\nimport Response from './response.js';\nimport Headers, {fromRawHeaders} from './headers.js';\nimport Request, {getNodeRequestOptions} from './request.js';\nimport {FetchError} from './errors/fetch-error.js';\nimport {AbortError} from './errors/abort-error.js';\nimport {isRedirect} from './utils/is-redirect.js';\nimport {FormData} from 'formdata-polyfill/esm.min.js';\nimport {isDomainOrSubdomain} from './utils/is.js';\nimport {parseReferrerPolicyFromHeader} from './utils/referrer.js';\nimport {\n\tBlob,\n\tFile,\n\tfileFromSync,\n\tfileFrom,\n\tblobFromSync,\n\tblobFrom\n} from 'fetch-blob/from.js';\n\nexport {FormData, Headers, Request, Response, FetchError, AbortError, isRedirect};\nexport {Blob, File, fileFromSync, fileFrom, blobFromSync, blobFrom};\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\nexport default async function fetch(url, options_) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new Request(url, options_);\n\t\tconst {parsedURL, options} = getNodeRequestOptions(request);\n\t\tif (!supportedSchemas.has(parsedURL.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${parsedURL.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (parsedURL.protocol === 'data:') {\n\t\t\tconst data = dataUriToBuffer(request.url);\n\t\t\tconst response = new Response(data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (parsedURL.protocol === 'https:' ? https : http).request;\n\t\tconst {signal} = request;\n\t\tlet response = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\n\t\t\tif (!response || !response.body) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(parsedURL.toString(), options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', error => {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${error.message}`, 'system', error));\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(request_, error => {\n\t\t\tif (response && response.body) {\n\t\t\t\tresponse.body.destroy(error);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (process.version < 'v14') {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\trequest_.on('socket', s => {\n\t\t\t\tlet endedWithEventsCount;\n\t\t\t\ts.prependListener('end', () => {\n\t\t\t\t\tendedWithEventsCount = s._eventsCount;\n\t\t\t\t});\n\t\t\t\ts.prependListener('close', hadError => {\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && endedWithEventsCount < s._eventsCount && !hadError) {\n\t\t\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\trequest_.on('response', response_ => {\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = fromRawHeaders(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (isRedirect(response_.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL(location, request.url);\n\t\t\t\t} catch {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Nothing to do\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: clone(request),\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\tsize: request.size,\n\t\t\t\t\t\t\treferrer: request.referrer,\n\t\t\t\t\t\t\treferrerPolicy: request.referrerPolicy\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// when forwarding sensitive headers like \"Authorization\",\n\t\t\t\t\t\t// \"WWW-Authenticate\", and \"Cookie\" to untrusted targets,\n\t\t\t\t\t\t// headers will be ignored when following a redirect to a domain\n\t\t\t\t\t\t// that is not a subdomain match or exact match of the initial domain.\n\t\t\t\t\t\t// For example, a redirect from \"foo.com\" to either \"foo.com\" or \"sub.foo.com\"\n\t\t\t\t\t\t// will forward the sensitive headers, but a redirect to \"bar.com\" will not.\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOptions.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 14\n\t\t\t\t\t\tconst responseReferrerPolicy = parseReferrerPolicyFromHeader(headers);\n\t\t\t\t\t\tif (responseReferrerPolicy) {\n\t\t\t\t\t\t\trequestOptions.referrerPolicy = responseReferrerPolicy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOptions)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn reject(new TypeError(`Redirect option '${request.redirect}' is not a valid value of RequestRedirect`));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tif (signal) {\n\t\t\t\tresponse_.once('end', () => {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet body = pump(response_, new PassThrough(), error => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\t/* c8 ignore next 3 */\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = pump(body, zlib.createGunzip(zlibOptions), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = pump(response_, new PassThrough(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflate(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = pump(body, zlib.createInflateRaw(), error => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.once('end', () => {\n\t\t\t\t\t// Some old IIS servers return zero-length OK deflate responses, so\n\t\t\t\t\t// 'data' is never emitted. See https://github.com/node-fetch/node-fetch/pull/903\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = pump(body, zlib.createBrotliDecompress(), error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new Response(body, responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\twriteToStream(request_, request).catch(reject);\n\t});\n}\n\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tconst LAST_CHUNK = Buffer.from('0\\r\\n\\r\\n');\n\n\tlet isChunkedTransfer = false;\n\tlet properLastChunkReceived = false;\n\tlet previousChunk;\n\n\trequest.on('response', response => {\n\t\tconst {headers} = response;\n\t\tisChunkedTransfer = headers['transfer-encoding'] === 'chunked' && !headers['content-length'];\n\t});\n\n\trequest.on('socket', socket => {\n\t\tconst onSocketClose = () => {\n\t\t\tif (isChunkedTransfer && !properLastChunkReceived) {\n\t\t\t\tconst error = new Error('Premature close');\n\t\t\t\terror.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\terrorCallback(error);\n\t\t\t}\n\t\t};\n\n\t\tconst onData = buf => {\n\t\t\tproperLastChunkReceived = Buffer.compare(buf.slice(-5), LAST_CHUNK) === 0;\n\n\t\t\t// Sometimes final 0-length chunk and end of message code are in separate packets\n\t\t\tif (!properLastChunkReceived && previousChunk) {\n\t\t\t\tproperLastChunkReceived = (\n\t\t\t\t\tBuffer.compare(previousChunk.slice(-3), LAST_CHUNK.slice(0, 3)) === 0 &&\n\t\t\t\t\tBuffer.compare(buf.slice(-2), LAST_CHUNK.slice(3)) === 0\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tpreviousChunk = buf;\n\t\t};\n\n\t\tsocket.prependListener('close', onSocketClose);\n\t\tsocket.on('data', onData);\n\n\t\trequest.on('close', () => {\n\t\t\tsocket.removeListener('close', onSocketClose);\n\t\t\tsocket.removeListener('data', onData);\n\t\t});\n\t});\n}\n"]},"metadata":{},"sourceType":"module"}