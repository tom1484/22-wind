{"ast":null,"code":"import axios from 'axios';\n\nclass Team {\n  constructor() {\n    this.teams = null;\n  }\n\n  async update() {\n    let post_data = {\n      url: \"http://140.112.174.222:9487/wind/fetch\",\n      method: \"post\",\n      data: {}\n    };\n    let query = await axios(post_data);\n    console.log(query);\n    let data = query.data.result;\n    data.sort((A, B) => A.score < B.score ? 1 : A.score > B.score ? -1 : 0);\n    let teams = new Array(data.length).fill({});\n    let curRank = 1;\n    let changed = false;\n\n    for (let i = 0; i < data.length; i++) {\n      if (i > 0 && data[i].score != data[i - 1].score) {\n        curRank++;\n      }\n\n      teams[data[i].ID] = {\n        \"rank\": curRank,\n        \"ID\": data[i].ID,\n        \"name\": data[i].name,\n        \"score\": data[i].score,\n        \"history\": data[i].history,\n        \"changed\": !this.teams || this.teams[data[i].ID].score != data[i].score\n      };\n      changed = changed || teams[data[i].ID].changed;\n    }\n\n    this.teams = teams;\n    let res = [...teams];\n    res.sort((A, B) => A.rank > B.rank ? 1 : A.rank < B.rank ? -1 : 0);\n    return res;\n  }\n\n}\n\nexport default new Team();","map":{"version":3,"sources":["/home/makerspace/mks_users_home/wind/22-wind/frontend/src/data/teams.js"],"names":["axios","Team","constructor","teams","update","post_data","url","method","data","query","console","log","result","sort","A","B","score","Array","length","fill","curRank","changed","i","ID","name","history","res","rank"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,IAAN,CAAW;AAEPC,EAAAA,WAAW,GAAG;AACV,SAAKC,KAAL,GAAa,IAAb;AACH;;AAEW,QAANC,MAAM,GAAG;AACX,QAAIC,SAAS,GAAG;AACZC,MAAAA,GAAG,EAAE,wCADO;AAEZC,MAAAA,MAAM,EAAE,MAFI;AAGZC,MAAAA,IAAI,EAAE;AAHM,KAAhB;AAKA,QAAIC,KAAK,GAAG,MAAMT,KAAK,CAACK,SAAD,CAAvB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAID,IAAI,GAAGC,KAAK,CAACD,IAAN,CAAWI,MAAtB;AACAJ,IAAAA,IAAI,CAACK,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAb,GAAsB,CAAtB,GAA4BF,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAb,GAAsB,CAAC,CAAvB,GAA2B,CAA1E;AAEA,QAAIb,KAAK,GAAG,IAAIc,KAAJ,CAAUT,IAAI,CAACU,MAAf,EAAuBC,IAAvB,CAA4B,EAA5B,CAAZ;AAEA,QAAIC,OAAO,GAAG,CAAd;AACA,QAAIC,OAAO,GAAG,KAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,IAAI,CAACU,MAAzB,EAAiCI,CAAC,EAAlC,EAAsC;AAClC,UAAIA,CAAC,GAAG,CAAJ,IAASd,IAAI,CAACc,CAAD,CAAJ,CAAQN,KAAR,IAAiBR,IAAI,CAACc,CAAC,GAAG,CAAL,CAAJ,CAAYN,KAA1C,EAAgD;AAC5CI,QAAAA,OAAO;AACV;;AACDjB,MAAAA,KAAK,CAACK,IAAI,CAACc,CAAD,CAAJ,CAAQC,EAAT,CAAL,GAAoB;AAChB,gBAAQH,OADQ;AAEhB,cAAMZ,IAAI,CAACc,CAAD,CAAJ,CAAQC,EAFE;AAGhB,gBAAQf,IAAI,CAACc,CAAD,CAAJ,CAAQE,IAHA;AAIhB,iBAAShB,IAAI,CAACc,CAAD,CAAJ,CAAQN,KAJD;AAKhB,mBAAWR,IAAI,CAACc,CAAD,CAAJ,CAAQG,OALH;AAMhB,mBAAY,CAAC,KAAKtB,KAAN,IAAe,KAAKA,KAAL,CAAWK,IAAI,CAACc,CAAD,CAAJ,CAAQC,EAAnB,EAAuBP,KAAvB,IAAgCR,IAAI,CAACc,CAAD,CAAJ,CAAQN;AANnD,OAApB;AASAK,MAAAA,OAAO,GAAGA,OAAO,IAAIlB,KAAK,CAACK,IAAI,CAACc,CAAD,CAAJ,CAAQC,EAAT,CAAL,CAAkBF,OAAvC;AACH;;AAED,SAAKlB,KAAL,GAAaA,KAAb;AACA,QAAIuB,GAAG,GAAG,CAAC,GAAGvB,KAAJ,CAAV;AACAuB,IAAAA,GAAG,CAACb,IAAJ,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACa,IAAF,GAASZ,CAAC,CAACY,IAAZ,GAAoB,CAApB,GAA0Bb,CAAC,CAACa,IAAF,GAASZ,CAAC,CAACY,IAAZ,GAAoB,CAAC,CAArB,GAAyB,CAArE;AAEA,WAAOD,GAAP;AACH;;AA1CM;;AA6CX,eAAe,IAAIzB,IAAJ,EAAf","sourcesContent":["import axios from 'axios';\n\n\nclass Team {\n\n    constructor() {\n        this.teams = null;\n    }\n\n    async update() {\n        let post_data = {\n            url: \"http://140.112.174.222:9487/wind/fetch\", \n            method: \"post\", \n            data: {}, \n        };\n        let query = await axios(post_data);\n        console.log(query);\n        let data = query.data.result;\n        data.sort((A, B) => (A.score < B.score) ? 1 : ((A.score > B.score) ? -1 : 0));\n\n        let teams = new Array(data.length).fill({});\n\n        let curRank = 1;\n        let changed = false;\n        for (let i = 0; i < data.length; i++) {\n            if (i > 0 && data[i].score != data[i - 1].score){\n                curRank++;\n            }\n            teams[data[i].ID] = {\n                \"rank\": curRank, \n                \"ID\": data[i].ID, \n                \"name\": data[i].name, \n                \"score\": data[i].score, \n                \"history\": data[i].history, \n                \"changed\": (!this.teams || this.teams[data[i].ID].score != data[i].score), \n            };\n\n            changed = changed || teams[data[i].ID].changed;\n        }\n\n        this.teams = teams;\n        let res = [...teams];\n        res.sort((A, B) => (A.rank > B.rank) ? 1 : ((A.rank < B.rank) ? -1 : 0));\n\n        return res;\n    }\n}\n\nexport default new Team;"]},"metadata":{},"sourceType":"module"}